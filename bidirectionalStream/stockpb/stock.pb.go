// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.3
// source: stockpb/stock.proto

package stockpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"` // Stock Symbol
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockRequest) Reset() {
	*x = StockRequest{}
	mi := &file_stockpb_stock_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockRequest) ProtoMessage() {}

func (x *StockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stockpb_stock_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockRequest.ProtoReflect.Descriptor instead.
func (*StockRequest) Descriptor() ([]byte, []int) {
	return file_stockpb_stock_proto_rawDescGZIP(), []int{0}
}

func (x *StockRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type StockPrice struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"` // Stock Symbol
	Price         float64                `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"` // Stock Price
	Time          string                 `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`     // Time Update of price
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockPrice) Reset() {
	*x = StockPrice{}
	mi := &file_stockpb_stock_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockPrice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockPrice) ProtoMessage() {}

func (x *StockPrice) ProtoReflect() protoreflect.Message {
	mi := &file_stockpb_stock_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockPrice.ProtoReflect.Descriptor instead.
func (*StockPrice) Descriptor() ([]byte, []int) {
	return file_stockpb_stock_proto_rawDescGZIP(), []int{1}
}

func (x *StockPrice) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *StockPrice) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *StockPrice) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

var File_stockpb_stock_proto protoreflect.FileDescriptor

const file_stockpb_stock_proto_rawDesc = "" +
	"\n" +
	"\x13stockpb/stock.proto\x12\astockpb\"&\n" +
	"\fStockRequest\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\"N\n" +
	"\n" +
	"StockPrice\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x14\n" +
	"\x05price\x18\x02 \x01(\x01R\x05price\x12\x12\n" +
	"\x04time\x18\x03 \x01(\tR\x04time2N\n" +
	"\fStockService\x12>\n" +
	"\fStreamPrices\x12\x15.stockpb.StockRequest\x1a\x13.stockpb.StockPrice(\x010\x01B\vZ\t./stockpbb\x06proto3"

var (
	file_stockpb_stock_proto_rawDescOnce sync.Once
	file_stockpb_stock_proto_rawDescData []byte
)

func file_stockpb_stock_proto_rawDescGZIP() []byte {
	file_stockpb_stock_proto_rawDescOnce.Do(func() {
		file_stockpb_stock_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_stockpb_stock_proto_rawDesc), len(file_stockpb_stock_proto_rawDesc)))
	})
	return file_stockpb_stock_proto_rawDescData
}

var file_stockpb_stock_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_stockpb_stock_proto_goTypes = []any{
	(*StockRequest)(nil), // 0: stockpb.StockRequest
	(*StockPrice)(nil),   // 1: stockpb.StockPrice
}
var file_stockpb_stock_proto_depIdxs = []int32{
	0, // 0: stockpb.StockService.StreamPrices:input_type -> stockpb.StockRequest
	1, // 1: stockpb.StockService.StreamPrices:output_type -> stockpb.StockPrice
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_stockpb_stock_proto_init() }
func file_stockpb_stock_proto_init() {
	if File_stockpb_stock_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_stockpb_stock_proto_rawDesc), len(file_stockpb_stock_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stockpb_stock_proto_goTypes,
		DependencyIndexes: file_stockpb_stock_proto_depIdxs,
		MessageInfos:      file_stockpb_stock_proto_msgTypes,
	}.Build()
	File_stockpb_stock_proto = out.File
	file_stockpb_stock_proto_goTypes = nil
	file_stockpb_stock_proto_depIdxs = nil
}
