// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.3
// source: news/news.proto

package news

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NewsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Category      string                 `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"` // Category for which news is requested.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewsRequest) Reset() {
	*x = NewsRequest{}
	mi := &file_news_news_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsRequest) ProtoMessage() {}

func (x *NewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_news_news_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsRequest.ProtoReflect.Descriptor instead.
func (*NewsRequest) Descriptor() ([]byte, []int) {
	return file_news_news_proto_rawDescGZIP(), []int{0}
}

func (x *NewsRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type NewsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Headline      string                 `protobuf:"bytes,1,opt,name=headline,proto3" json:"headline,omitempty"` // Each response has a headline
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewsResponse) Reset() {
	*x = NewsResponse{}
	mi := &file_news_news_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsResponse) ProtoMessage() {}

func (x *NewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_news_news_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsResponse.ProtoReflect.Descriptor instead.
func (*NewsResponse) Descriptor() ([]byte, []int) {
	return file_news_news_proto_rawDescGZIP(), []int{1}
}

func (x *NewsResponse) GetHeadline() string {
	if x != nil {
		return x.Headline
	}
	return ""
}

var File_news_news_proto protoreflect.FileDescriptor

const file_news_news_proto_rawDesc = "" +
	"\n" +
	"\x0fnews/news.proto\x12\x04news\")\n" +
	"\vNewsRequest\x12\x1a\n" +
	"\bcategory\x18\x01 \x01(\tR\bcategory\"*\n" +
	"\fNewsResponse\x12\x1a\n" +
	"\bheadline\x18\x01 \x01(\tR\bheadline2G\n" +
	"\vNewsService\x128\n" +
	"\rGetNewsStream\x12\x11.news.NewsRequest\x1a\x12.news.NewsResponse0\x01B\bZ\x06./newsb\x06proto3"

var (
	file_news_news_proto_rawDescOnce sync.Once
	file_news_news_proto_rawDescData []byte
)

func file_news_news_proto_rawDescGZIP() []byte {
	file_news_news_proto_rawDescOnce.Do(func() {
		file_news_news_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_news_news_proto_rawDesc), len(file_news_news_proto_rawDesc)))
	})
	return file_news_news_proto_rawDescData
}

var file_news_news_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_news_news_proto_goTypes = []any{
	(*NewsRequest)(nil),  // 0: news.NewsRequest
	(*NewsResponse)(nil), // 1: news.NewsResponse
}
var file_news_news_proto_depIdxs = []int32{
	0, // 0: news.NewsService.GetNewsStream:input_type -> news.NewsRequest
	1, // 1: news.NewsService.GetNewsStream:output_type -> news.NewsResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_news_news_proto_init() }
func file_news_news_proto_init() {
	if File_news_news_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_news_news_proto_rawDesc), len(file_news_news_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_news_news_proto_goTypes,
		DependencyIndexes: file_news_news_proto_depIdxs,
		MessageInfos:      file_news_news_proto_msgTypes,
	}.Build()
	File_news_news_proto = out.File
	file_news_news_proto_goTypes = nil
	file_news_news_proto_depIdxs = nil
}
